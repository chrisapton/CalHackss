{"docstore/data": {"1fa01ba5-0fe9-4870-864b-cc4d98d2bb34": {"__data__": {"id_": "1fa01ba5-0fe9-4870-864b-cc4d98d2bb34", "embedding": null, "metadata": {"page_label": "1", "file_name": "temp.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {}, "hash": "aba9b3dc47d4d2b077f7bef5a8c8aba9a0b9c69cf2626e01c864d22c8eb72df9", "text": " \nDSCI550: Data Science at Scale  \nHomework 4 , Fall 2023 \nDue: 11:59 pm, Oct. 27, 2023  \n \n \n1. (40 pts) Draw  a full ER diagram  for the following  requirements:  \nThe university  database stores details about  university students, courses, the \nsemester a student took a particular course (and his mark and grade if he completed \nit), and what degree program each student is enrolled in. Consider the following \nrequirements list:  \n\u2022 The university offers one or more programs.  \n\u2022 A program is made up of one or more courses.  \n\u2022 A student must enrol l in a program.  \n\u2022 A student takes the courses that are part of her program.  \n\u2022 A program has a name, a program identifier, the total credit points required to \ngraduate, and the year it commenced.  \n\u2022 A course has a name, a course identifier, a credit point value, and the year it \ncommenced.  \n\u2022 Students have one or more given names, a surname, a student identifier, a date \nof birth, and the year they first enrolled. We can treat all given names as a single \nobject \u2014for example,  \u201cJohn  Paul.\u201d  \n\u2022 When a student takes a co urse, the year and semester he attempted it are \nrecorded. When he finishes the course, a grade (such as A or B) and a mark (such as \n60 percent) are recorded.  \n\u2022 Each course in a program is sequenced into a year (for example, year 1) and a \nsemester (for exampl e, semester 1).  \n \n2. (30 pts) In the Store _Sales  table, the Item_Code and Store_ID are key attributes.  \n \nStore_ID  Street  City ZipCode  Item_Code  Item_Description  Quantity  Unit_Price  \nS-100 Main St  LA 90010  I-200 Something Good  30 25 \nS-100 Main St  LA 90010  I-201 Something Better  22 35 \nS-101 3rd St  LA 90011  I-200 Something Good  54 25 \n \n1) (5 pts) Explain if this is in 1st Normal Form.  \n2) (10 pts) Explain if this is in 2nd Normal Form. Use specific attribute names in your \nexplanation.  \n3) (15 pts) If it is not in 2nd Normal Form, create tables in 2nd Normal Form.  \n \n \n ", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "4"}, "81a602d7-78e7-474a-9cc0-adeb37f7bfda": {"__data__": {"id_": "81a602d7-78e7-474a-9cc0-adeb37f7bfda", "embedding": null, "metadata": {"page_label": "2", "file_name": "temp.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {}, "hash": "857207a2a977d4a38987a3c8ccdb744fac45bdaf0a1fb55c5714f30bf5f68b95", "text": "3. (30 pts) Using the following tables in the movie database, write SQL queries.  \nSuppose that tuples are already inserted into the tables.  \n\u25cf Actor ( id, fname, lname, age, gender, nationality)  \n\u25cf Movie ( id, name, year, rank, revenue, studio , director_id ) \n\u25cf Director ( id, fname, lname, gender, income)  \n      id column in ACTOR, MOVIE , and  DIRECTOR tables is the key for the respective table.   \n \n1) (3 pts) List all the male actors (i.e., gender = \u2018M\u2019).    \n2) (3 pts) Find the actor whose first name is \u2018John\u2019 and from \u2018Spain\u2019.    \n3) (3 pts) List first name and last name of all the actors whose nationality is \u2018USA\u2019.  \n4) (3 pts) List the name and revenue of movies made by \u201cUniversal Studio\u201d.  \n5) (3 pts) List the total number of movies released in 2018.  \n6) (3 pts) List max income of all directors.  \n7) (4 pts) List the name of movies in descending ord er of revenue, i.e., the highest \nfirst.  \n8) (4 pts) List the average income of female directors.  \n9) (4 pts) List the names and year s of the movies directed by \u201cJeniffer\u201d  (fname) . \n ", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "4"}}, "docstore/metadata": {"1fa01ba5-0fe9-4870-864b-cc4d98d2bb34": {"doc_hash": "aba9b3dc47d4d2b077f7bef5a8c8aba9a0b9c69cf2626e01c864d22c8eb72df9"}, "81a602d7-78e7-474a-9cc0-adeb37f7bfda": {"doc_hash": "857207a2a977d4a38987a3c8ccdb744fac45bdaf0a1fb55c5714f30bf5f68b95"}}}